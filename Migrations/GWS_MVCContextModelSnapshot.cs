// <auto-generated />
using System;
using GWS_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GWS_MVC.Migrations
{
    [DbContext(typeof(GWS_MVCContext))]
    partial class GWS_MVCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GWS_MVC.Models.Gas_tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Anbieter");

                    b.Property<string>("Anbieter");

                    b.HasKey("Id");

                    b.ToTable("Gas_tarif");
                });

            modelBuilder.Entity("GWS_MVC.Models.Gas_zaehlerstand", b =>
                {
                    b.Property<int>("ID_Tag")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Ablesetag");

                    b.Property<string>("Bemerkungen");

                    b.Property<int>("ID_Anbieter");

                    b.Property<double?>("Temperatur_aussen");

                    b.Property<double?>("Temperatur_innen");

                    b.Property<DateTime>("Uhrzeit");

                    b.Property<double?>("Zaehlerstand");

                    b.HasKey("ID_Tag");

                    b.ToTable("Gas_zaehlerstand");
                });

            modelBuilder.Entity("GWS_MVC.Models.Konfiguration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Key");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("Konfiguration");
                });

            modelBuilder.Entity("GWS_MVC.Models.Strom_tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Anbieter");

                    b.Property<string>("Anbieter");

                    b.HasKey("Id");

                    b.ToTable("Strom_tarif");
                });

            modelBuilder.Entity("GWS_MVC.Models.Strom_zaehlerstand", b =>
                {
                    b.Property<int>("ID_Tag")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Ablesetag");

                    b.Property<string>("Bemerkungen");

                    b.Property<int>("ID_Anbieter");

                    b.Property<double?>("Temperatur_aussen");

                    b.Property<double?>("Temperatur_innen");

                    b.Property<DateTime>("Uhrzeit");

                    b.Property<double?>("Zaehlerstand");

                    b.HasKey("ID_Tag");

                    b.ToTable("Strom_zaehlerstand");
                });

            modelBuilder.Entity("GWS_MVC.Models.Wasser_tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_Anbieter");

                    b.Property<string>("Anbieter");

                    b.HasKey("Id");

                    b.ToTable("Wasser_tarif");
                });

            modelBuilder.Entity("GWS_MVC.Models.Wasser_zaehlerstand", b =>
                {
                    b.Property<int>("ID_Tag")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Ablesetag");

                    b.Property<string>("Bemerkungen");

                    b.Property<int>("ID_Anbieter");

                    b.Property<double?>("Temperatur_aussen");

                    b.Property<double?>("Temperatur_innen");

                    b.Property<DateTime>("Uhrzeit");

                    b.Property<double?>("Zaehlerstand");

                    b.HasKey("ID_Tag");

                    b.ToTable("Wasser_zaehlerstand");
                });
#pragma warning restore 612, 618
        }
    }
}
